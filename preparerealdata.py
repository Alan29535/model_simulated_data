# -*- coding: utf-8 -*-
"""preparerealdata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pn9pvXLux8tQC71-CunZSEsrD2sOkPlg
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from scipy.signal import stft
import os

class ExcelDataProcessor:
    def __init__(self):
        self.dfs = []
        for i in range(1, 11):
            df = eval(f'df_{i}')
            self.dfs.append(df)

    def keep_columns(self, cols_to_keep):
        for i in range(10):
            df = self.dfs[i]
            df = df.iloc[:, cols_to_keep]
            self.dfs[i] = df
        
    def keep_rows(self, num_rows):
        for i in range(10):
            df = self.dfs[i]
            df = df.iloc[:num_rows, :]
            self.dfs[i] = df
        
    def extract_flow_columns(self):
        cols = []
        for i in range(10):
            df = self.dfs[i]
            col = df.iloc[:, 0]
            cols.append(col)
        column_names = [str(i) for i in range(10)]
        flow = pd.concat(cols, axis=1, keys=column_names)
        return flow
    
    def extract_pressure_columns(self):
        cols = []
        for i in range(10):
            df = self.dfs[i]
            col = df.iloc[:, 1]
            cols.append(col)
        column_names = [str(i) for i in range(10)]
        pressure = pd.concat(cols, axis=1, keys=column_names)
        return pressure

    def extract_volume_columns(self):
        cols = []
        for i in range(10):
            df = self.dfs[i]
            col = df.iloc[:, 2]
            cols.append(col)
        column_names = [str(i) for i in range(10)]
        volume = pd.concat(cols, axis=1, keys=column_names)
        return volume